//
//  ViewController.swift
//  super-duper to-do
//
//  Created by –î–∞–Ω–∏—è–ª on 29.04.2024.
//  Copyright ¬© 2024 All rights reserved.
//  –ü—Ä–æ—à—É –Ω–µ —Å—É–¥–∏—Ç—å —Å—Ç—Ä–æ–≥–æ üôÉ –Ø —Å–ø–æ—Å–æ–±–µ–Ω –Ω–∞ –±–æ–ª—å—à–µ–µ, —Ç–æ–ª—å–∫–æ —Å–∫–∞–∂–∏—Ç–µ —á—Ç–æ –∏–º–µ–Ω–Ω–æ –ø–æ–¥–ø—Ä–∞–≤–∏—Ç—å/–¥–æ–±–∞–≤–∏—Ç—å

import UIKit
import CoreData

class TodoListViewController: UITableViewController {
    
    var itemArray = [Item]()
    var dataFilePath = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask).first?.appendingPathComponent(K.keyForDataFilePath)
    let context = (UIApplication.shared.delegate as! AppDelegate).persistentContainer.viewContext
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        print(FileManager.default.urls(for: .documentDirectory, in: .userDomainMask))
        loadItems()
    }
    
    //MARK: - UpdateUI || Tableview Datasource Methods // –ó–∞–ø—É—Å–∫–∞—é—Ç—Å—è –ø–æ—Å–ª–µ viewDidLoad –∏ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ tableView.reloadData()
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        itemArray.count
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: K.cellIdentifier, for: indexPath)
        let item = itemArray[indexPath.row]
        
        cell.accessoryType = item.done ? .checkmark: .none
        
        if #available(iOS 14.0, *) {
            var content = cell.defaultContentConfiguration()
            content.text = item.title
            cell.contentConfiguration = content
        } else {
            cell.textLabel?.text = item.title
        }
        
        return cell
    }
    
    //MARK: - did Select | TableView Delegate Methods
    
    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
                
        // –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –Ω–∞–∂–∞—Ç–∏–∏ —Å—Ç–∞–≤–∏–º –≥–∞–ª–æ—á–∫—É, –ø—Ä–∏ –≤—Ç–æ—Ä–æ–º - —É–¥–∞–ª—è–µ–º
        if !itemArray[indexPath.row].done {
            
            itemArray[indexPath.row].done = !itemArray[indexPath.row].done
            tableView.deselectRow(at: indexPath, animated: true)
        } else {
            context.delete(itemArray[indexPath.row])
            itemArray.remove(at: indexPath.row)
        }
        
        saveItems()
    }
    
    
    //MARK: - Add New Items
    
    @IBAction func addButtonPressed(_ sender: UIBarButtonItem) {

        let alert = UIAlertController(title: "Add New Item", message: nil, preferredStyle: .alert)
        var textField = UITextField()
        
        //        –°–æ–∑–¥–∞–Ω–∏–µ (–Ω–æ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ) –∫–Ω–æ–ø–∫–∏ "Add Item" –≤–æ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –æ–∫–Ω–µ –∏ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –Ω–µ—ë:
        let action = UIAlertAction(title: "Add Item", style: .default) { [weak self] _ in
            guard let self = self, let text = textField.text, !text.isEmpty else { return }

            //  C–æ–∑–¥–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä Core Data –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
            let newItem = Item(context: context)
            newItem.title = text
            newItem.done = false
            itemArray.append(newItem)
            saveItems()
        }
        
        // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è –≤ alert
        alert.addTextField { alertTextField in
            alertTextField.placeholder = "Create new item"
            textField = alertTextField
        }
        
        //        –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "Add Item" –≤ alert
        alert.addAction(action)
        
        // –ü–æ–∫–∞–∑ –æ–∫–Ω–∞ alert
        present(alert, animated: true)
    }
}
//MARK: - Search bar methods

extension TodoListViewController: UISearchBarDelegate {

    func searchBarSearchButtonClicked(_ searchBar: UISearchBar) {
        // request - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ (–ø—É—Å—Ç—ã–µ)
        let request = Item.fetchRequest()
        
        if !searchBar.text!.isEmpty {
            // –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
            request.predicate = NSPredicate(format: "title CONTAINS[cd] %@", searchBar.text!)
            // –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
            request.sortDescriptors = [NSSortDescriptor(key: "title", ascending: true)]
        }
        
        loadItems(with: request)
    }
}

//MARK: - Data Methods
extension TodoListViewController {
    
    func saveItems() {
        do {
            try context.save()
        } catch {
            print("Error saving context \(error)")
        }
        tableView.reloadData()
    }
    
    func loadItems(with request: NSFetchRequest<Item> = Item.fetchRequest()) {
        
        do {
            itemArray = try context.fetch(request)
        } catch {
            print("Eroor fetching data from context \(error)")
        }
        tableView.reloadData()
    }
}
